//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StateMachine.Configuration
{
    
    
    /// <summary>
    /// The StateMachineSection Configuration Section.
    /// </summary>
    public partial class StateMachineSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the StateMachineSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string StateMachineSectionSectionName = "stateMachine";
        
        /// <summary>
        /// Gets the StateMachineSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public static global::StateMachine.Configuration.StateMachineSection Instance
        {
            get
            {
                return ((global::StateMachine.Configuration.StateMachineSection)(global::System.Configuration.ConfigurationManager.GetSection(global::StateMachine.Configuration.StateMachineSection.StateMachineSectionSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::StateMachine.Configuration.StateMachineSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::StateMachine.Configuration.StateMachineSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region DefaultStateId Property
        /// <summary>
        /// The XML name of the <see cref="DefaultStateId"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string DefaultStateIdPropertyName = "defaultStateId";
        
        /// <summary>
        /// Gets or sets the DefaultStateId.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The DefaultStateId.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::StateMachine.Configuration.StateMachineSection.DefaultStateIdPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string DefaultStateId
        {
            get
            {
                return ((string)(base[global::StateMachine.Configuration.StateMachineSection.DefaultStateIdPropertyName]));
            }
            set
            {
                base[global::StateMachine.Configuration.StateMachineSection.DefaultStateIdPropertyName] = value;
            }
        }
        #endregion
        
        #region States Property
        /// <summary>
        /// The XML name of the <see cref="States"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string StatesPropertyName = "states";
        
        /// <summary>
        /// Gets or sets the States.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The States.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::StateMachine.Configuration.StateMachineSection.StatesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::StateMachine.Configuration.StateCollection States
        {
            get
            {
                return ((global::StateMachine.Configuration.StateCollection)(base[global::StateMachine.Configuration.StateMachineSection.StatesPropertyName]));
            }
            set
            {
                base[global::StateMachine.Configuration.StateMachineSection.StatesPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace StateMachine.Configuration
{
    
    
    /// <summary>
    /// A collection of StateElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::StateMachine.Configuration.StateElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::StateMachine.Configuration.StateCollection.StateElementPropertyName)]
    public partial class StateCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::StateMachine.Configuration.StateElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string StateElementPropertyName = "state";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::StateMachine.Configuration.StateCollection.StateElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::StateMachine.Configuration.StateCollection.StateElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::StateMachine.Configuration.StateElement)(element)).StateId;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::StateMachine.Configuration.StateElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::StateMachine.Configuration.StateElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::StateMachine.Configuration.StateElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::StateMachine.Configuration.StateElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::StateMachine.Configuration.StateElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::StateMachine.Configuration.StateElement this[int index]
        {
            get
            {
                return ((global::StateMachine.Configuration.StateElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::StateMachine.Configuration.StateElement"/> with the specified key.
        /// </summary>
        /// <param name="stateId">The key of the <see cref="global::StateMachine.Configuration.StateElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::StateMachine.Configuration.StateElement this[object stateId]
        {
            get
            {
                return ((global::StateMachine.Configuration.StateElement)(base.BaseGet(stateId)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::StateMachine.Configuration.StateElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="state">The <see cref="global::StateMachine.Configuration.StateElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Add(global::StateMachine.Configuration.StateElement state)
        {
            base.BaseAdd(state);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::StateMachine.Configuration.StateElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="state">The <see cref="global::StateMachine.Configuration.StateElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Remove(global::StateMachine.Configuration.StateElement state)
        {
            base.BaseRemove(this.GetElementKey(state));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::StateMachine.Configuration.StateElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::StateMachine.Configuration.StateElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::StateMachine.Configuration.StateElement GetItemAt(int index)
        {
            return ((global::StateMachine.Configuration.StateElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::StateMachine.Configuration.StateElement"/> with the specified key.
        /// </summary>
        /// <param name="stateId">The key of the <see cref="global::StateMachine.Configuration.StateElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::StateMachine.Configuration.StateElement GetItemByKey(string stateId)
        {
            return ((global::StateMachine.Configuration.StateElement)(base.BaseGet(((object)(stateId)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace StateMachine.Configuration
{
    
    
    /// <summary>
    /// A collection of TransitionElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::StateMachine.Configuration.TransitionElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::StateMachine.Configuration.TransitionCollection.TransitionElementPropertyName)]
    public partial class TransitionCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::StateMachine.Configuration.TransitionElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string TransitionElementPropertyName = "transition";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::StateMachine.Configuration.TransitionCollection.TransitionElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::StateMachine.Configuration.TransitionCollection.TransitionElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::StateMachine.Configuration.TransitionElement)(element)).StateId;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::StateMachine.Configuration.TransitionElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::StateMachine.Configuration.TransitionElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::StateMachine.Configuration.TransitionElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::StateMachine.Configuration.TransitionElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::StateMachine.Configuration.TransitionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::StateMachine.Configuration.TransitionElement this[int index]
        {
            get
            {
                return ((global::StateMachine.Configuration.TransitionElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::StateMachine.Configuration.TransitionElement"/> with the specified key.
        /// </summary>
        /// <param name="stateId">The key of the <see cref="global::StateMachine.Configuration.TransitionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::StateMachine.Configuration.TransitionElement this[object stateId]
        {
            get
            {
                return ((global::StateMachine.Configuration.TransitionElement)(base.BaseGet(stateId)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::StateMachine.Configuration.TransitionElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="transition">The <see cref="global::StateMachine.Configuration.TransitionElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Add(global::StateMachine.Configuration.TransitionElement transition)
        {
            base.BaseAdd(transition);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::StateMachine.Configuration.TransitionElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="transition">The <see cref="global::StateMachine.Configuration.TransitionElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Remove(global::StateMachine.Configuration.TransitionElement transition)
        {
            base.BaseRemove(this.GetElementKey(transition));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::StateMachine.Configuration.TransitionElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::StateMachine.Configuration.TransitionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::StateMachine.Configuration.TransitionElement GetItemAt(int index)
        {
            return ((global::StateMachine.Configuration.TransitionElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::StateMachine.Configuration.TransitionElement"/> with the specified key.
        /// </summary>
        /// <param name="stateId">The key of the <see cref="global::StateMachine.Configuration.TransitionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::StateMachine.Configuration.TransitionElement GetItemByKey(string stateId)
        {
            return ((global::StateMachine.Configuration.TransitionElement)(base.BaseGet(((object)(stateId)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace StateMachine.Configuration
{
    
    
    /// <summary>
    /// The StateElement Configuration Element.
    /// </summary>
    public partial class StateElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region StateId Property
        /// <summary>
        /// The XML name of the <see cref="StateId"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string StateIdPropertyName = "stateId";
        
        /// <summary>
        /// Gets or sets the StateId.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The StateId.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::StateMachine.Configuration.StateElement.StateIdPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string StateId
        {
            get
            {
                return ((string)(base[global::StateMachine.Configuration.StateElement.StateIdPropertyName]));
            }
            set
            {
                base[global::StateMachine.Configuration.StateElement.StateIdPropertyName] = value;
            }
        }
        #endregion
        
        #region StateName Property
        /// <summary>
        /// The XML name of the <see cref="StateName"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string StateNamePropertyName = "stateName";
        
        /// <summary>
        /// Gets or sets the StateName.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The StateName.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::StateMachine.Configuration.StateElement.StateNamePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string StateName
        {
            get
            {
                return ((string)(base[global::StateMachine.Configuration.StateElement.StateNamePropertyName]));
            }
            set
            {
                base[global::StateMachine.Configuration.StateElement.StateNamePropertyName] = value;
            }
        }
        #endregion
        
        #region Transitions Property
        /// <summary>
        /// The XML name of the <see cref="Transitions"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string TransitionsPropertyName = "transitions";
        
        /// <summary>
        /// Gets or sets the Transitions.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Transitions.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::StateMachine.Configuration.StateElement.TransitionsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::StateMachine.Configuration.TransitionCollection Transitions
        {
            get
            {
                return ((global::StateMachine.Configuration.TransitionCollection)(base[global::StateMachine.Configuration.StateElement.TransitionsPropertyName]));
            }
            set
            {
                base[global::StateMachine.Configuration.StateElement.TransitionsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace StateMachine.Configuration
{
    
    
    /// <summary>
    /// The TransitionElement Configuration Element.
    /// </summary>
    public partial class TransitionElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region StateId Property
        /// <summary>
        /// The XML name of the <see cref="StateId"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string StateIdPropertyName = "stateId";
        
        /// <summary>
        /// Gets or sets the StateId.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The StateId.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::StateMachine.Configuration.TransitionElement.StateIdPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string StateId
        {
            get
            {
                return ((string)(base[global::StateMachine.Configuration.TransitionElement.StateIdPropertyName]));
            }
            set
            {
                base[global::StateMachine.Configuration.TransitionElement.StateIdPropertyName] = value;
            }
        }
        #endregion
    }
}
